<% layout("/layouts/boilerplate") %>
<style>
    .wishlist-checkbox {
        position: relative;
        top: 5px;
        float:right;
        z-index: 10;

    }
    
    .wishlist-checkbox input[type="checkbox"] {
        display: none; /* Hide the actual checkbox */
        
    }
    
    .wishlist-checkbox label {
        cursor: pointer;
        font-size: 24px;
        color: #ccc; /* Default grey color for the heart */
        transition: color 0.3s ease;
    }
 
    
    .wishlist-checkbox input[type="checkbox"]:checked + label {
        color: #e74c3c; /* Red color when the heart is checked */
      }
      
      .wishlist-checkbox label i {
        pointer-events: none; /* Disable pointer events on the icon itself */
      }
      
</style>
<div class="row">
    <div class="col-8 offset-3 mt-3"> 
            <h3><b><%= listing.title %></b></h3>
        </div>
    <div class="card col-6 offset-3 show-card">
        <img src="<%=listing.image.url%>" class="card-img-top show-img" alt="image-list">
        
        <div class="card-body">
            <div class="wishlist-checkbox">
                <input type="checkbox" id="wishlist-<%=listing._id%>" class="wishlist-checkbox" data-listing-id="<%= listing._id %>">
                <label for="wishlist-<%=listing._id%>">
                    <i class="fa fa-heart"></i>
                </label>
            </div>
            <p class="card-text">Owned By :<i><%=listing.owner.username%></i></p>
            <p class="card-text"><%= listing.description %></p>
            <p class="card-text"><b>Price:</b>&#8377; <%= listing.price.toLocaleString("en-IN") %></p>
            <p class="card-text"><b>Location:</b><%= listing.location %></p>
            <p class="card-text"><b>Country:</b> <%= listing.country %> </p>
            <% if(currUser) {%>
            <button class="add-to-cart" data-listing-id="<%= listing._id %>">Reserve</button>
            <%}%>
        </div>
    </div>
    
    <% if(currUser && currUser._id.equals(listing.owner._id)) {%>
    <div class="btns">
        <a href="/listings/<%=listing._id%>/edit" class="btn btn-dark col-1 offset-3 edit-btn">
            Edit
        </a>
        <form method="post" action="/listings/<%=listing._id%>?_method=DELETE">
            <button class="btn btn-dark offset-5">Delete</button>
        </form>
    </div>
    <%}%>

    <div class="col-7 offset-3 mt-3 mb-3">
        <hr>
        <% if(currUser) {%>
        <h3>Leave a review</h3>
        <form method="post" action="/listings/<%=listing._id%>/reviews" novalidate class="needs-validation">
            <div>
                <label for="rating" class="form-label mt-3"> Rating</label>
                <fieldset class="starability-grow">
                    <input type="radio" id="no-rate" class="input-no-rate" name="review[rating]" value="1" checked aria-label="No rating." />
                    <input type="radio" id="first-rate1" name="review[rating]" value="1" />
                    <label for="first-rate1" title="Terrible">1 star</label>
                    <input type="radio" id="first-rate2" name="review[rating]" value="2" />
                    <label for="first-rate2" title="Not good">2 stars</label>
                    <input type="radio" id="first-rate3" name="review[rating]" value="3" />
                    <label for="first-rate3" title="Average">3 stars</label>
                    <input type="radio" id="first-rate4" name="review[rating]" value="4" />
                    <label for="first-rate4" title="Very good">4 stars</label>
                    <input type="radio" id="first-rate5" name="review[rating]" value="5" />
                    <label for="first-rate5" title="Amazing">5 stars</label>
                </fieldset>
            </div>

            <div>
                <label for="comment" class="form-label"> Comment</label>
                <textarea class="form-control mt-3 mb-3" name="review[comment]" id="comment" cols="20" rows="5" required ></textarea>
                <div class="invalid-feedback">Please add some comment for review</div>
            </div>
            <button class="btn btn-outline-dark">Submit</button>
        </form>
        <hr>
        <%}%>

        <% if(listing.reviews.length>0) {%>
        <h3>All reviews</h3>
        <div class="row">
            <% for(review of listing.reviews) {%>
            <div class="card border-card col-5 mb-3 ms-3">
                <div class="card-body">
                    <h5 class="card-title">@<%= review.author.username%></h5>
                    <p class="starability-result card-text" data-rating="<%=review.rating%>"> </p>
                    <p class="card-text"><%= review.comment%></p>
                    <% if (currUser && review.author.equals(currUser._id)) {%>
                    <form method="post" action="/listings/<%=listing._id%>/reviews/<%=review._id%>?_method=DELETE">
                        <button class="btn btn-dark btn-sm">Delete</button>
                    </form>
                    <%}%>
                </div>
            </div>
            <%}%>
        </div>
        <%}%>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const addToCartButtons = document.querySelectorAll('.add-to-cart');
    
        addToCartButtons.forEach(button => {
            button.addEventListener('click', function() {
                const listingId = this.getAttribute('data-listing-id');
    
                fetch('/cart/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        listingId: listingId,
                        quantity: 1, // Default quantity, you can modify this
                    }),
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Item added to cart!');
                        // Optionally update cart UI
                    } else {
                        alert('Failed to add to cart');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
            });
        });
    });



    document.addEventListener('DOMContentLoaded', function() {
        const wishlistCheckboxes = document.querySelectorAll('.wishlist-checkbox input[type="checkbox"]');
    
        wishlistCheckboxes.forEach(checkbox => {
            checkbox.addEventListener('change', function() {
                const listingId = this.getAttribute('data-listing-id');
                const isChecked = this.checked;
    
                fetch('/wishlist', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        listingId: listingId,
                        action: isChecked ? 'add' : 'remove'
                    }),
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        console.log(`Wishlist updated: Listing ${isChecked ? 'added to' : 'removed from'} wishlist.`);
                    } else {
                        console.error('Failed to update wishlist');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
            });
        });
    });
</script>
